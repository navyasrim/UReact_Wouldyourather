{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navya\\\\Desktop\\\\Navya_UI\\\\Wyrather\\\\wyr\\\\src\\\\components\\\\Addnewquestion.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleAddNewQuestion } from '../actions/questions';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Addnewquestion extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionOne: '',\n      questionTwo: '',\n      toHome: false\n    };\n\n    this.handleOptionOne = e => {\n      const questionOne = e.target.value;\n      this.setState(() => ({\n        questionOne\n      }));\n    };\n\n    this.handleOptionTwo = e => {\n      const questionTwo = e.target.value;\n      this.setState(() => ({\n        questionTwo\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        questionOne,\n        questionTwo\n      } = this.state;\n      const {\n        dispatch\n      } = this.props; //Add question to the store\n      //just make sure it is working\n\n      console.log('New Question: ', questionOne, 'or', questionTwo);\n      dispatch(handleAddNewQuestion(questionOne, questionTwo)); //after done resetting fields to empty\n\n      this.setState(() => ({\n        questionOne: '',\n        questionTwo: '',\n        toHome: true\n      }));\n    };\n  }\n\n  render() {\n    //comes questionOne, questionTwo, toHome from setstate then assigning to value={} in textarea\n    const {\n      questionOne,\n      questionTwo,\n      toHome\n    } = this.state;\n    const qOneLeft = 280 - questionOne.length;\n    const qTwoLeft = 280 - questionTwo.length; //redirencting to home after sumbitting is done\n\n    if (toHome === true) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"new-question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center create-new-question-header\",\n        children: \" Create New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Complete the Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \" Would you rather ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"new-question\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter Option One Text Here\",\n          value: questionOne,\n          onChange: this.handleOptionOne,\n          className: \"textarea\",\n          maxLength: 280\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), qOneLeft <= 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-question-length\",\n          children: qOneLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \" OR \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter Option Two Text Here\",\n          value: questionTwo,\n          onChange: this.handleOptionTwo,\n          className: \"textarea\",\n          maxLength: 280\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), qTwoLeft <= 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-question-length\",\n          children: qTwoLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"submit\",\n          disabled: questionOne === questionTwo === '',\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser\n}) {\n  return {\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(Addnewquestion);","map":{"version":3,"sources":["C:/Users/navya/Desktop/Navya_UI/Wyrather/wyr/src/components/Addnewquestion.js"],"names":["React","Component","connect","handleAddNewQuestion","Redirect","Addnewquestion","state","questionOne","questionTwo","toHome","handleOptionOne","e","target","value","setState","handleOptionTwo","handleSubmit","preventDefault","dispatch","props","console","log","render","qOneLeft","length","qTwoLeft","fontWeight","mapStateToProps","authedUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleAddNewQuestion } from '../actions/questions'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Addnewquestion extends Component {\r\n    state = {\r\n        questionOne: '',\r\n        questionTwo: '',\r\n        toHome: false,\r\n    }\r\n\r\n    handleOptionOne = (e) => {\r\n        const questionOne = e.target.value\r\n\r\n        this.setState(() => ({\r\n            questionOne\r\n        }))\r\n    }\r\n\r\n    handleOptionTwo = (e) => {\r\n        const questionTwo = e.target.value\r\n\r\n        this.setState(() => ({\r\n            questionTwo\r\n        }))\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { questionOne, questionTwo } = this.state;\r\n        const { dispatch } = this.props;\r\n        //Add question to the store\r\n        //just make sure it is working\r\n        console.log(\r\n            'New Question: ', questionOne, 'or', questionTwo\r\n        );\r\n        dispatch(handleAddNewQuestion(questionOne, questionTwo));\r\n\r\n        //after done resetting fields to empty\r\n        this.setState(() => ({\r\n            questionOne: '',\r\n            questionTwo: '',\r\n            toHome: true,\r\n        }))\r\n    }\r\n    render() {\r\n        //comes questionOne, questionTwo, toHome from setstate then assigning to value={} in textarea\r\n        const { questionOne, questionTwo, toHome } = this.state\r\n        const qOneLeft = 280 - questionOne.length\r\n        const qTwoLeft = 280 - questionTwo.length\r\n        //redirencting to home after sumbitting is done\r\n        if (toHome === true) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n\r\n            <div id='new-question-container'>\r\n                <h3 className='center create-new-question-header'> Create New Question</h3>\r\n                <br />\r\n                <h3 > Complete the Question:</h3>\r\n                <br />\r\n                <h2 style={{ fontWeight: 'bold' }}> Would you rather ...</h2>\r\n                <form className='new-question' onSubmit={this.handleSubmit}>\r\n                    <textarea\r\n                        placeholder=\"Enter Option One Text Here\"\r\n                        value={questionOne}\r\n                        onChange={this.handleOptionOne}\r\n                        className='textarea'\r\n                        maxLength={280}\r\n                    />\r\n                    {qOneLeft <= 100 && (\r\n                        <div className='new-question-length'>\r\n                            {qOneLeft}\r\n\r\n                        </div>\r\n                        )}\r\n                    <span style={{ fontWeight: 'bold' }}> OR </span>\r\n                    <textarea\r\n                        placeholder=\"Enter Option Two Text Here\"\r\n                        value={questionTwo}\r\n                        onChange={this.handleOptionTwo}\r\n                        className='textarea'\r\n                        maxLength={280}\r\n                    />\r\n                    {qTwoLeft <= 100 && (\r\n                        <div className='new-question-length'>\r\n                            {qTwoLeft}\r\n\r\n                        </div>\r\n                    )}\r\n                    <br />\r\n                    <button\r\n                        className='btn'\r\n                        type='submit'\r\n                        disabled={questionOne === questionTwo === ''}>\r\n                        Submit\r\n          </button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n    return ({ authedUser });\r\n}\r\n\r\nexport default connect(mapStateToProps)(Addnewquestion);"]},"metadata":{},"sourceType":"module"}