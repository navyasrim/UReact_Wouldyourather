{"ast":null,"code":"import { saveQuestion } from '../utils/api';\nimport { saveAnswer } from '../utils/api';\nimport { showLoading, hideLoading } from 'react-redux-loading';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_NEW_QUESTION = 'ADD_NEW_QUESTION';\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION';\nexport function receivequestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\n\nfunction answerQuestion({\n  qid,\n  authedUser,\n  answer\n}) {\n  return {\n    type: ANSWER_QUESTION,\n    qid,\n    authedUser,\n    answer\n  };\n}\n\nexport function handleAnswerQuestion(qid, answer) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(showLoading());\n    return saveAnswer({\n      authedUser,\n      qid,\n      answer\n    }).then(() => dispatch(answerQuestion({\n      qid,\n      authedUser,\n      answer\n    }))).then(() => dispatch(hideLoading()));\n  };\n} //new question\n\nfunction addNewQuestion(question) {\n  return {\n    type: ADD_NEW_QUESTION,\n    question\n  };\n}\n\nexport function handleAddNewQuestion(questionOne, questionTwo) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(showLoading());\n    return saveQuestion({\n      optionOneText: questionOne,\n      optionTwoText: questionTwo,\n      author: authedUser\n    }).then(question => dispatch(addNewQuestion(question))).then(() => dispatch(hideLoading()));\n  };\n}","map":{"version":3,"sources":["C:/Users/navya/Desktop/Navya_UI/Wyrather/wyr/src/actions/questions.js"],"names":["saveQuestion","saveAnswer","showLoading","hideLoading","RECEIVE_QUESTIONS","ADD_NEW_QUESTION","ANSWER_QUESTION","receivequestions","questions","type","answerQuestion","qid","authedUser","answer","handleAnswerQuestion","dispatch","getState","then","addNewQuestion","question","handleAddNewQuestion","questionOne","questionTwo","optionOneText","optionTwoText","author"],"mappings":"AACA,SAASA,YAAT,QAA6B,cAA7B;AACA,SAASC,UAAT,QAA4B,cAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,qBAAzC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEL,iBADH;AAEHI,IAAAA;AAFG,GAAP;AAIH;;AAED,SAASE,cAAT,CAAwB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,UAAP;AAAmBC,EAAAA;AAAnB,CAAxB,EAAqD;AAEjD,SAAO;AACHJ,IAAAA,IAAI,EAAEH,eADH;AAEHK,IAAAA,GAFG;AAGHC,IAAAA,UAHG;AAIHC,IAAAA;AAJG,GAAP;AAMH;;AAGD,OAAO,SAASC,oBAAT,CAA8BH,GAA9B,EAAmCE,MAAnC,EAA2C;AAC9C,SAAO,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAM;AAAEJ,MAAAA;AAAF,QAAiBI,QAAQ,EAA/B;AACAD,IAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACA,WAAOD,UAAU,CAAC;AACdW,MAAAA,UADc;AAEdD,MAAAA,GAFc;AAGdE,MAAAA;AAHc,KAAD,CAAV,CAIJI,IAJI,CAIC,MAAMF,QAAQ,CAACL,cAAc,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,UAAP;AAAmBC,MAAAA;AAAnB,KAAD,CAAf,CAJf,EAKFI,IALE,CAKG,MAAMF,QAAQ,CAACZ,WAAW,EAAZ,CALjB,CAAP;AAMH,GATD;AAUH,C,CAED;;AAEA,SAASe,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,SAAO;AACHV,IAAAA,IAAI,EAAEJ,gBADH;AAEHc,IAAAA;AAFG,GAAP;AAIH;;AAGD,OAAO,SAASC,oBAAT,CAA8BC,WAA9B,EAA2CC,WAA3C,EAAwD;AAC3D,SAAO,CAACP,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAM;AAAEJ,MAAAA;AAAF,QAAiBI,QAAQ,EAA/B;AACAD,IAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACA,WAAOF,YAAY,CAAC;AAChBuB,MAAAA,aAAa,EAAEF,WADC;AAEhBG,MAAAA,aAAa,EAAEF,WAFC;AAGhBG,MAAAA,MAAM,EAAEb;AAHQ,KAAD,CAAZ,CAKFK,IALE,CAKIE,QAAD,IAAcJ,QAAQ,CAACG,cAAc,CAACC,QAAD,CAAf,CALzB,EAMFF,IANE,CAMG,MAAMF,QAAQ,CAACZ,WAAW,EAAZ,CANjB,CAAP;AAOH,GAVD;AAWH","sourcesContent":["\r\nimport { saveQuestion } from '../utils/api'\r\nimport { saveAnswer  } from '../utils/api'\r\nimport { showLoading, hideLoading } from 'react-redux-loading'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const ADD_NEW_QUESTION = 'ADD_NEW_QUESTION'\r\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\r\n\r\nexport function receivequestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nfunction answerQuestion({ qid, authedUser, answer }) {\r\n\r\n    return {\r\n        type: ANSWER_QUESTION,\r\n        qid,\r\n        authedUser,\r\n        answer\r\n    }\r\n}\r\n\r\n\r\nexport function handleAnswerQuestion(qid, answer) {\r\n    return (dispatch, getState) => {\r\n        const { authedUser } = getState();\r\n        dispatch(showLoading());\r\n        return saveAnswer({\r\n            authedUser,\r\n            qid,\r\n            answer\r\n        }).then(() => dispatch(answerQuestion({ qid, authedUser, answer })))\r\n            .then(() => dispatch(hideLoading()));\r\n    }\r\n}\r\n\r\n//new question\r\n\r\nfunction addNewQuestion(question) {\r\n    return {\r\n        type: ADD_NEW_QUESTION,\r\n        question\r\n    }\r\n}\r\n\r\n\r\nexport function handleAddNewQuestion(questionOne, questionTwo) {\r\n    return (dispatch, getState) => {\r\n        const { authedUser } = getState();\r\n        dispatch(showLoading()); \r\n        return saveQuestion({\r\n            optionOneText: questionOne,\r\n            optionTwoText: questionTwo,\r\n            author: authedUser,\r\n        })\r\n            .then((question) => dispatch(addNewQuestion(question)))\r\n            .then(() => dispatch(hideLoading()))\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}