{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navya\\\\Desktop\\\\Navya_UI\\\\Wyrather\\\\wyr\\\\src\\\\components\\\\Nomatch.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Questionsanswered from '../components/Questionsanswered';\nimport Questionsunanswered from '../components/Questionsunanswered';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Nomatch extends Component {\n  render() {\n    const {\n      id,\n      hasAnswered\n    } = this.props; //console.log(hasAnswered);\n\n    console.log('here', this.props.questions[id]);\n\n    if (this.props.question === 'question does not exist') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          dislay: 'flex',\n          flex: 1,\n          fontSize: '100px'\n        },\n        children: \"No Matching ERROR 404\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    } else {\n      let unanswered = !hasAnswered;\n      return unanswered ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Question\",\n        children: /*#__PURE__*/_jsxDEV(Questionsunanswered, {\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Question\",\n        children: /*#__PURE__*/_jsxDEV(Questionsanswered, {\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, props) {\n  const {\n    id\n  } = props.match.params;\n  const question = questions[id] ? questions[id] : 'question does not exist';\n  let userAnswers = authedUser !== '' ? users[authedUser].answers : []; //will be -1 if question is unanswered\n\n  let hasAnswered = Object.keys(userAnswers).indexOf(id);\n  return {\n    authedUser,\n    questions,\n    question,\n    hasAnswered: hasAnswered >= 0,\n    id\n  };\n}\n\nexport default connect(mapStateToProps)(Nomatch);","map":{"version":3,"sources":["C:/Users/navya/Desktop/Navya_UI/Wyrather/wyr/src/components/Nomatch.js"],"names":["React","Component","connect","Questionsanswered","Questionsunanswered","Nomatch","render","id","hasAnswered","props","console","log","questions","question","dislay","flex","fontSize","unanswered","mapStateToProps","authedUser","users","match","params","userAnswers","answers","Object","keys","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC5BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAsB,KAAKC,KAAjC,CADK,CAEL;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKF,KAAL,CAAWG,SAAX,CAAqBL,EAArB,CAApB;;AACA,QAAI,KAAKE,KAAL,CAAWI,QAAX,KAAwB,yBAA5B,EAAuD;AACnD,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,IAAI,EAAE,CAAxB;AAA2BC,UAAAA,QAAQ,EAAE;AAArC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND,MAOK;AACD,UAAIC,UAAU,GAAG,CAACT,WAAlB;AACA,aACIS,UAAU,gBACN;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,mBAAD;AAAqB,UAAA,EAAE,EAAEV;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADM,gBAMN;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPR;AAWH;AACJ;;AA1B2B;;AA6BhC,SAASW,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBR,EAAAA;AAArB,CAAzB,EAA2DH,KAA3D,EAAkE;AAE9D,QAAM;AAAEF,IAAAA;AAAF,MAASE,KAAK,CAACY,KAAN,CAAYC,MAA3B;AACA,QAAMT,QAAQ,GAAGD,SAAS,CAACL,EAAD,CAAT,GAAgBK,SAAS,CAACL,EAAD,CAAzB,GAAgC,yBAAjD;AAEA,MAAIgB,WAAW,GACVJ,UAAU,KAAK,EAAhB,GACIC,KAAK,CAACD,UAAD,CAAL,CAAkBK,OADtB,GAEM,EAHV,CAL8D,CAU9D;;AACA,MAAIhB,WAAW,GAAGiB,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,OAAzB,CAAiCpB,EAAjC,CAAlB;AAEA,SAAO;AACHY,IAAAA,UADG;AAEHP,IAAAA,SAFG;AAGHC,IAAAA,QAHG;AAIHL,IAAAA,WAAW,EAAEA,WAAW,IAAI,CAJzB;AAKHD,IAAAA;AALG,GAAP;AAOH;;AAED,eAAeL,OAAO,CAACgB,eAAD,CAAP,CAAyBb,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Questionsanswered from '../components/Questionsanswered'\r\nimport Questionsunanswered from '../components/Questionsunanswered'\r\n\r\nclass Nomatch extends Component {\r\n    render() {\r\n        const { id, hasAnswered } = this.props;\r\n        //console.log(hasAnswered);\r\n        console.log('here', this.props.questions[id]);\r\n        if (this.props.question === 'question does not exist') {\r\n            return (\r\n                <div style={{ dislay: 'flex', flex: 1, fontSize: '100px' }}>\r\n                    No Matching ERROR 404 \r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            let unanswered = !hasAnswered;\r\n            return (\r\n                unanswered ?\r\n                    <div className='Question'>\r\n                        <Questionsunanswered id={id} />\r\n\r\n                    </div> :\r\n\r\n                    <div className='Question'>\r\n                        <Questionsanswered id={id} />\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, users, questions }, props) {\r\n\r\n    const { id } = props.match.params;\r\n    const question = questions[id] ? questions[id] : 'question does not exist';\r\n\r\n    let userAnswers =\r\n        (authedUser !== '') ?\r\n            users[authedUser].answers\r\n            : [];\r\n\r\n    //will be -1 if question is unanswered\r\n    let hasAnswered = Object.keys(userAnswers).indexOf(id);\r\n\r\n    return {\r\n        authedUser,\r\n        questions,\r\n        question,\r\n        hasAnswered: hasAnswered >= 0,\r\n        id\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Nomatch);"]},"metadata":{},"sourceType":"module"}