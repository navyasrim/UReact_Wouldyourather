{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navya\\\\Desktop\\\\Navya_UI\\\\Wyrather\\\\wyr\\\\src\\\\components\\\\Leaderboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Usercard from '../components/Usercard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Leaderboard extends Component {\n  render() {\n    const {\n      userIDs,\n      getScore\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"leaderboard\",\n      children: userIDs.map(userID => key = {\n        userID\n      }( /*#__PURE__*/_jsxDEV(Usercard, {\n        userID: userID,\n        getScore: getScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 22\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  users\n}) {\n  function getScore(user) {\n    return user.questions.length + Object.keys(user.answers).length;\n  }\n\n  return {\n    userIDs: Object.keys(users).sort((a, b) => getScore(users[b]) - getScore(users[a])),\n    getScore\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);","map":{"version":3,"sources":["C:/Users/navya/Desktop/Navya_UI/Wyrather/wyr/src/components/Leaderboard.js"],"names":["React","Component","connect","Usercard","Leaderboard","render","userIDs","getScore","props","map","userID","key","mapStateToProps","users","user","questions","length","Object","keys","answers","sort","a","b"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAwB,KAAKC,KAAnC;AACA,wBACI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA,gBACKF,OAAO,CAACG,GAAR,CAAaC,MAAD,IAAYC,GAAG,GAAG;AAAED,QAAAA;AAAF,sBAC1B,QAAC,QAAD;AAAU,QAAA,MAAM,EAAEA,MAAlB;AAA0B,QAAA,QAAQ,EAAEH;AAApC;AAAA;AAAA;AAAA;AAAA,cAD0B,CAA9B;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAV+B;;AAapC,SAASK,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAoC;AAChC,WAASN,QAAT,CAAkBO,IAAlB,EAAwB;AACpB,WAAOA,IAAI,CAACC,SAAL,CAAeC,MAAf,GAAwBC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACK,OAAjB,EAA0BH,MAAzD;AACH;;AAED,SAAO;AACHV,IAAAA,OAAO,EAAEW,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBO,IAAnB,CACL,CAACC,CAAD,EAAIC,CAAJ,KAAUf,QAAQ,CAACM,KAAK,CAACS,CAAD,CAAN,CAAR,GAAqBf,QAAQ,CAACM,KAAK,CAACQ,CAAD,CAAN,CADlC,CADN;AAIHd,IAAAA;AAJG,GAAP;AAMH;;AAED,eAAeL,OAAO,CAACU,eAAD,CAAP,CAAyBR,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Usercard from '../components/Usercard'\r\n\r\nclass Leaderboard extends Component {\r\n    render() {\r\n        const { userIDs, getScore } = this.props;\r\n        return (\r\n            <div id='leaderboard' >\r\n                {userIDs.map((userID) => key = { userID }\r\n                    (<Usercard userID={userID} getScore={getScore} />))}\r\n               </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n    function getScore(user) {\r\n        return user.questions.length + Object.keys(user.answers).length;\r\n    }\r\n\r\n    return {\r\n        userIDs: Object.keys(users).sort(\r\n            (a, b) => getScore(users[b]) - getScore(users[a])\r\n        ),\r\n        getScore,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard)"]},"metadata":{},"sourceType":"module"}