{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navya\\\\Desktop\\\\Navya_UI\\\\Wyrather\\\\wyr\\\\src\\\\components\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { handleInitialData } from '../actions/shared';\nimport LoadingBar from 'react-redux-loading';\nimport './App.css';\nimport Nav from '../components/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  //when component mounts we want to dispatch invocation of handleInitialData action creator\n  componentDidMount() {\n    this.props.dispatch(handleInitialData());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: this.props.authedUser === true ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/leaderboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/question/:id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser\n}) {\n  return {\n    //loading will be true if null\n    loading: authedUser === null,\n    authedUser\n  };\n} //we need to connect our App component  to get invocation \n\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/navya/Desktop/Navya_UI/Wyrather/wyr/src/components/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Route","connect","handleInitialData","LoadingBar","Nav","App","componentDidMount","props","dispatch","render","authedUser","mapStateToProps","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAmCC,KAAnC,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AAIA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AACxB;AACAU,EAAAA,iBAAiB,GAAG;AAEhB,SAAKC,KAAL,CAAWC,QAAX,CAAoBN,iBAAiB,EAArC;AAEH;;AACDO,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AAAA,6BACI,QAAC,QAAD;AAAA,gCACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACK,KAAKF,KAAL,CAAWG,UAAX,KAA0B,IAA1B,GACK,IADL,gBAEK;AAAA,oCACM,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,GAAZ;AAAgB,cAAA,KAAK;AAArB;AAAA;AAAA;AAAA;AAAA,oBADN,eAEE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AA5BuB;;AA+B5B,SAASC,eAAT,CAAyB;AAAED,EAAAA;AAAF,CAAzB,EAAyC;AACrC,SAAO;AACH;AACJE,IAAAA,OAAO,EAAGF,UAAU,KAAK,IAFlB;AAGJA,IAAAA;AAHI,GAAP;AAMH,C,CACD;;;AACA,eAAeT,OAAO,CAACU,eAAD,CAAP,CAA0BN,GAA1B,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { BrowserRouter as Router , Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { handleInitialData } from '../actions/shared'\nimport LoadingBar from 'react-redux-loading'\nimport './App.css'\nimport Nav from '../components/Nav'\n\n\n\nclass App extends Component {\n    //when component mounts we want to dispatch invocation of handleInitialData action creator\n    componentDidMount() {\n\n        this.props.dispatch(handleInitialData())\n\r\n    }\n    render() {\n        return (\n            <Router>\n                <Fragment>\n                <LoadingBar />\n                <div className=\"container\">                   \n                    {this.props.authedUser === true\n                        ? null\r\n                        : <div>\r\n                                <Route path='/' exact  />\r\n                            <Route path='/add'  />\r\n                            <Route path='/leaderboard'/>\r\n                            <Route path='/question/:id'  />\r\n                            </div>\r\n                    }\n\n                    </div>\n                </Fragment>\n                </Router>\n       \n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser }) {\r\n    return {\r\n        //loading will be true if null\r\n    loading : authedUser === null,\r\n       authedUser,\r\n       }\r\n\r\n}\n//we need to connect our App component  to get invocation \nexport default connect(mapStateToProps) (App)\n"]},"metadata":{},"sourceType":"module"}