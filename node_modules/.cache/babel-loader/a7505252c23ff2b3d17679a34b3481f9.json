{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navya\\\\Desktop\\\\Navya_UI\\\\Wyrather\\\\wyr\\\\src\\\\components\\\\Usercard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Fragment } from 'react';\nimport images from './images/images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Usercard extends Component {\n  render() {\n    const {\n      user,\n      getScore\n    } = this.props;\n    const totalAnswers = Object.keys(user.answers).length;\n    const totalQuestions = user.questions.length;\n    const image = user.avatarURL;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[image],\n          alt: `avatar of ${user.name}`,\n          className: \"avatar\",\n          style: {\n            width: '120px',\n            height: '80px',\n            marginTop: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-questions answered-questions\",\n            children: [\"Answered Questions  :    \", totalAnswers]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-questions answered-questions\",\n            children: [\"Asked Questions  :     \", totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"score-card\",\n          style: {\n            border: \"1px solid\",\n            float: \"inline-start\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"score\",\n              style: {\n                border: \"1px solid\"\n              },\n              children: \" Score  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"score-number\",\n              children: getScore(user)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  users\n}, {\n  userID,\n  getScore\n}) {\n  /* getScore is passed from leaderboard component,\r\n     accepts a user and calculates score*/\n  return {\n    user: users[userID],\n    getScore\n  };\n}\n\nexport default connect(mapStateToProps)(Usercard);","map":{"version":3,"sources":["C:/Users/navya/Desktop/Navya_UI/Wyrather/wyr/src/components/Usercard.js"],"names":["React","Component","connect","Fragment","images","Usercard","render","user","getScore","props","totalAnswers","Object","keys","answers","length","totalQuestions","questions","image","avatarURL","name","width","height","marginTop","border","float","mapStateToProps","users","userID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAqB,KAAKC,KAAhC;AACA,UAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACM,OAAjB,EAA0BC,MAA/C;AACA,UAAMC,cAAc,GAAGR,IAAI,CAACS,SAAL,CAAeF,MAAtC;AACA,UAAMG,KAAK,GAAGV,IAAI,CAACW,SAAnB;AACA,wBACI,QAAC,QAAD;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACA;AACI,UAAA,GAAG,EAAEd,MAAM,CAACa,KAAD,CADf;AAEI,UAAA,GAAG,EAAG,aAAYV,IAAI,CAACY,IAAK,EAFhC;AAGI,UAAA,SAAS,EAAC,QAHd;AAII,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,MAAM,EAAE,MAA1B;AAAkCC,YAAAA,SAAS,EAAE;AAA7C;AAJX;AAAA;AAAA;AAAA;AAAA,gBADA,eAOA;AAAK,UAAA,EAAE,EAAC,WAAR;AAAA,kCACI;AAAA,sBAAKf,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,mCAAf;AAAA,oDAC8BT,YAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAK,YAAA,SAAS,EAAC,mCAAf;AAAA,kDAC4BK,cAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,eAgBI;AAAK,UAAA,EAAE,EAAC,YAAR;AAAqB,UAAA,KAAK,EAAE;AAAEQ,YAAAA,MAAM,EAAE,WAAV;AAAuBC,YAAAA,KAAK,EAAE;AAA9B,WAA5B;AAAA,iCACI,QAAC,QAAD;AAAA,oCACI;AAAK,cAAA,EAAE,EAAC,OAAR;AAAgB,cAAA,KAAK,EAAE;AAAED,gBAAAA,MAAM,EAAE;AAAV,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,EAAE,EAAC,cAAR;AAAA,wBAAwBf,QAAQ,CAACD,IAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA6BH;;AApC4B;;AAuCjC,SAASkB,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAoC;AAAEC,EAAAA,MAAF;AAAUnB,EAAAA;AAAV,CAApC,EAA0D;AACtD;AACJ;AACI,SAAO;AACHD,IAAAA,IAAI,EAAEmB,KAAK,CAACC,MAAD,CADR;AAEHnB,IAAAA;AAFG,GAAP;AAIH;;AAED,eAAeN,OAAO,CAACuB,eAAD,CAAP,CAAyBpB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Fragment } from 'react'\r\nimport images from './images/images'\r\n\r\nclass Usercard extends Component {\r\n\r\n    render() {\r\n        const { user, getScore } = this.props;\r\n        const totalAnswers = Object.keys(user.answers).length;\r\n        const totalQuestions = user.questions.length;\r\n        const image = user.avatarURL;\r\n        return (\r\n            <Fragment>\r\n                <div id='user-card' >\r\n                <img\r\n                    src={images[image]}\r\n                    alt={`avatar of ${user.name}`}\r\n                    className='avatar'\r\n                    style={{ width: '120px', height: '80px', marginTop: '20px' }}\r\n                />\r\n                <div id='user-info'>\r\n                    <h3>{user.name}</h3>\r\n                    <div className='user-questions answered-questions'>\r\n                        Answered Questions  :    {totalAnswers}\r\n                    </div>\r\n                    <div className='user-questions answered-questions'>\r\n                        Asked Questions  :     {totalQuestions}\r\n                    </div>\r\n                </div>\r\n                    <div id='score-card' style={{ border: \"1px solid\", float: \"inline-start\" }}>\r\n                        <Fragment>\r\n                            <div id='score' style={{ border: \"1px solid\" }} > Score  </div>\r\n                            <div id='score-number'>{getScore(user)}</div>\r\n                        </Fragment>\r\n                </div>\r\n\r\n                </div>\r\n            </Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ users }, { userID, getScore }) {\r\n    /* getScore is passed from leaderboard component,\r\n       accepts a user and calculates score*/\r\n    return {\r\n        user: users[userID],\r\n        getScore,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Usercard)"]},"metadata":{},"sourceType":"module"}